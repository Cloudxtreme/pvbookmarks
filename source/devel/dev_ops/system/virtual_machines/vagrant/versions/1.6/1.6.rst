
.. index::
   pair: Vagrant; 1.6


.. _vagrant_1.6:

============================
Vagrant 1.6
============================

.. seealso::

   - https://stackoverflow.com/questions/16647069/should-i-use-vagrant-or-docker-io-for-creating-an-isolated-environment
   - http://www.vagrantup.com/blog/feature-preview-vagrant-1-6-docker-dev-environments.html


.. contents::
   :depth: 3

Description
============

With Vagrant 1.6, Vagrant has docker-based development environments, and supports 
using Docker with the same workflow as Vagrant across Linux, Mac, and Windows. 

Vagrant doesn't try to replace Docker here, it embraces Docker practices.


Vagrant 1.6 comes with a new built-in provider: Docker. The Docker provider 
allows Vagrant to manage development environments that run within containers, 
rather than virtual machines. 

This works without any additional software required on Linux, Mac OS X, and Windows.

The Docker provider in Vagrant makes it incredibly easy to keep the workflow 
you're used to with both Vagrant and Docker while gaining all the benefits of 
Vagrant: cross-platform portability, synced folders, networking, provisioners, 
vagrant share, plugins, etc.

On platforms that don't support Linux Containers natively such as Mac OS X and 
Windows, Vagrant automatically brings up and shares a proxy virtual machine to 
run Docker. 

This proxy VM is completely customizable, and Vagrant ensures that synced 
folders and networking work as you would expect. 

Users of Vagrant don't need to worry about doing any of this manually.



